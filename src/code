// --- ProjectRequest.java (modifié)
@Data
public class ProjectRequest {
    private String projectName;
    private String javaVersion;
    private String gradleVersion;
    private String groupId;
    private String artifactId;
    private String description;
    private String version = "1.0.0";
    private String unibankDomainVersion = "3.7.79";
    private String unibankPlatformVersion = "3.2-95";
    private List<String> dependencies; // ✅ Choix des dépendances dynamiques
}


// --- ApiModuleTemplates.java (modifié)
@Component
public class ApiModuleTemplates {
    public String getApiBuildGradleTemplate(List<String> dependencies) {
        StringBuilder deps = new StringBuilder("""
            plugins {
                id 'java-library'
            }

            apply plugin: 'unibank.springboot.platform'
            apply plugin: 'unibank.maven-publish'
            apply plugin: 'unibank.kotlin'

            dependencies {
        """);

        if (dependencies.contains("lombok")) {
            deps.append("""
                compileOnly("org.projectlombok:lombok:1.18.20")
                annotationProcessor("org.projectlombok:lombok:1.18.20")
            """);
        }

        if (dependencies.contains("web")) {
            deps.append("""
                implementation("org.springframework.boot:spring-boot-starter-web")
            """);
        }

        if (dependencies.contains("validation")) {
            deps.append("""
                implementation("org.springframework.boot:spring-boot-starter-validation")
            """);
        }

        deps.append("""
            api("com.socgen.unibank.core:unibank-core-domain:${property(\"unibank.domain_version\")}")
            api("com.socgen.unibank.core:unibank-core-platform-model:${property(\"unibank.domain_version\")}")
        }
        """);

        return deps.toString();
    }
}

// --- ApiModuleGenerator.java (modifié)
@Component
@RequiredArgsConstructor
public class ApiModuleGenerator implements ProjectModuleGenerator {
    private final ApiModuleTemplates templates;

    @Override
    public void generate(ZipOutputStream zos, ProjectRequest request, Set<String> addedFiles) throws IOException {
        String projectName = request.getProjectName();
        addToZip(zos,
            String.format("%s-api/build.gradle.kts", projectName),
            templates.getApiBuildGradleTemplate(request.getDependencies()),
            addedFiles);
        // les autres fichiers générés ne changent pas
    }
}

// --- CoreModuleTemplates.java (modifié)
@Component
public class CoreModuleTemplates {
    public String getCoreBuildGradleTemplate(String projectName, List<String> dependencies) {
        StringBuilder deps = new StringBuilder("""
            plugins {
                id 'java-library'
            }

            apply(plugin = "unibank.springboot.platform")
            apply(plugin = "unibank.maven-publish")
            apply(plugin = "unibank.junits")
            apply(plugin = "foundation-qa-coverage-silver")

            dependencies {
        """);

        if (dependencies.contains("lombok")) {
            deps.append("""
                implementation("org.projectlombok:lombok:1.18.26")
                annotationProcessor("org.projectlombok:lombok:1.18.20")
            """);
        }

        if (dependencies.contains("mapstruct")) {
            deps.append("""
                implementation("org.mapstruct:mapstruct:1.5.5.Final")
                annotationProcessor("org.mapstruct:mapstruct-processor:1.5.5.Final")
            """);
        }

        deps.append("""
            api("com.socgen.unibank.platform:unibank-platform-core:${property(\"unibank.platform_version\")}")
            api("com.socgen.unibank.platform:unibank-platform-springboot:${property(\"unibank.platform_version\")}")
            testImplementation("com.socgen.unibank.platform:unibank-platform-springboot-test:${property(\"unibank.platform_version\")}")
            implementation(project(\":" + projectName + "-api"))
        }
        """);
        return deps.toString();
    }
}

// --- CoreModuleGenerator.java (modifié)
@Component
public class CoreModuleGenerator implements ProjectModuleGenerator {
    private final CoreModuleTemplates templates;

    @Override
    public void generate(ZipOutputStream zos, ProjectRequest request, Set<String> addedFiles) throws IOException {
        String projectName = request.getProjectName();
        String buildGradlePath = String.format("%s-core/build.gradle.kts", projectName);
        addToZip(zos, buildGradlePath, templates.getCoreBuildGradleTemplate(projectName, request.getDependencies()), addedFiles);
    }
}

// --- GatewaysModuleTemplates.java (modifié)
@Component
public class GatewaysModuleTemplates {
    public String getBuildGradleTemplate(String projectName, List<String> dependencies) {
        StringBuilder deps = new StringBuilder("""
            plugins {
                id 'java-library'
            }

            apply(plugin = "unibank.service")
            apply(plugin = "foundation-qa-coverage-bronze")
            apply(plugin = "foundation-qa")

            dependencies {
        """);

        if (dependencies.contains("web")) {
            deps.append("implementation(\"org.springframework.boot:spring-boot-starter-web\")\n");
        }

        if (dependencies.contains("graphql")) {
            deps.append("implementation(\"org.springframework.boot:spring-boot-starter-graphql\")\n");
        }

        if (dependencies.contains("jpa")) {
            deps.append("implementation(\"org.springframework.boot:spring-boot-starter-data-jpa\")\n");
        }

        if (dependencies.contains("vault")) {
            deps.append("implementation(\"org.springframework.cloud:spring-cloud-starter-vault-config\")\n");
        }

        if (dependencies.contains("lombok")) {
            deps.append("""
                compileOnly("org.projectlombok:lombok:1.18.20")
                annotationProcessor("org.projectlombok:lombok:1.18.20")
            """);
        }

        deps.append("""
            api("com.socgen.unibank.core:unibank-core-domain")
            api("com.socgen.unibank.platform:unibank-platform-core")
            implementation("commons-io:commons-io:2.11.0")
            implementation("org.apache.commons:commons-collections4:4.4")
            implementation(project(\":" + projectName + "-api"))
            implementation(project(\":" + projectName + "-core"))
        }
        """);

        return deps.toString();
    }
}

// --- GatewaysModuleGenerator.java (modifié - extrait)
@Component
public class GatewaysModuleGenerator implements ProjectModuleGenerator {
    private final GatewaysModuleTemplates templates;

    @Override
    public void generate(ZipOutputStream zos, ProjectRequest request, Set<String> addedFiles) throws IOException {
        String projectName = request.getProjectName();
        addToZip(zos,
            String.format("%s-gateways/build.gradle.kts", projectName),
            templates.getBuildGradleTemplate(projectName, request.getDependencies()),
            addedFiles);
        // autres fichiers générés inchangés
    }
}
